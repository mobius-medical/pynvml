pipeline {
    agent { label "docker-gpu"}
    environment {
        DOCKER_BUILDKIT=1
        UBUNTU_BASE_TAG=20.04
    }
    stages {
        stage("Capture Build Info"){
            steps {
                rtBuildInfo (captureEnv: true)
            }
        }
        stage("Build Docker image and wheels") {
            steps {
                sh script: """
                    docker build \
                        --progress=plain \
                        --tag pynvml:${BUILD_NUMBER} \
                        --file ci/Dockerfile .
                    """
            }
        }
        stage("Test"){
            steps {
                sh script: """
                    docker run \
                        --interactive \
                        --name pynvml \
                        --gpus all pynvml:${BUILD_NUMBER}
                    """
                sh script: "docker cp pynvml:/sandbox/artifact ."
                sh script: "docker container rm pynvml"
                sh script: "docker image rm pynvml:${BUILD_NUMBER}"
            }
            post {
                always {
                    archiveArtifacts artifacts: 'artifact/xunit-*.xml'
                    junit testResults: 'artifact/xunit-*.xml'
                }
            }
        }
        stage("Upload wheels"){
            steps {
                rtUpload (
                    failNoOp: true,
                    serverId: 'uspa-arty',
                    spec: """{
                        "files": [{
                            "pattern": "artifact/pynvml-*.whl",
                            "target": "m3d-pypi-prerelease"
                        }]
                    }""",
                )
            }
        }
    }
}