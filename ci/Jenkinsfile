pipeline {
    agent {
        dockerfile {
            filename 'Dockerfile'
            dir './ci'
            label 'docker-gpu'
            args '--gpus all'
        }
    }
    environment {
        DOCKER_BUILDKIT=1
        UBUNTU_BASE_TAG=16.04
    }
    stages {
        stage('pynvml'){
            steps {
                rtBuildInfo (captureEnv: true)
                sh script: 'tox -p'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'artifacts/*'
                    junit testResults: 'artifacts/xunit-*.xml'
                }
            }
        }
        stage ('Upload Wheels'){
            when { branch 'master' }
            steps {
                rtUpload (
                    failNoOp: true,
                    serverId: 'uspa-arty',
                    spec: """{
                        "files": [{
                            "pattern": "artifacts/pynvml-*.whl",
                            "target": "m3d-pypi-prerelease"
                        }]
                    }""",
                )
                rtPublishBuildInfo(serverId: 'uspa-arty')
            }
        }
    }
}
